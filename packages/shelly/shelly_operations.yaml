######################################################################
# Shelly Package - Operations Script
######################################################################

script:
  ######################################################################
  # Shelly: Upgrade
  ######################################################################
  shelly_upgrade:
    alias: "Shelly: Aggiornamento Firmware Collettivo"
    variables:
      pending_update_list: >
        {{ states.update
          | selectattr('state','eq','on')
          | selectattr('entity_id', 'in', states.group.shelly.attributes.entity_id)
          | map(attribute='entity_id')
          | list
        }}
    sequence:
      #- service: mqtt.publish
      #  data:
      #    topic: 'shellies/command'
      #    payload: 'update_fw'
      #    qos: 0
      #    retain: false
      - service: update.install
        target:
          entity_id: '{{ pending_update_list }}'

  ######################################################################
  # Shelly: Reboot
  ######################################################################
  shelly_reboot:
    alias: "Shelly: Riavvio Dispositivi Collettivo"
    sequence:
      - service: shell_command.shelly_reboot

  ######################################################################
  # Shelly: Force State Update
  ######################################################################
  shelly_force_state_update:
    alias: "Shelly: Aggiornamento stato dispositivi"
    sequence:
      - service: mqtt.publish
        data:
          payload: update
          topic: shellies/command

automation:
  ######################################################################
  # Shelly: Update Notification
  ######################################################################
  - alias: "Shelly: Update Notification"
    variables:
      pending_update_list: >
        {{ states.update
          | selectattr('state','eq','on')
          | selectattr('entity_id', 'in', states.group.shelly.attributes.entity_id)
          | map(attribute='entity_id')
          | list
        }}
    trigger:
      - platform: state
        entity_id: group.shelly
        to: 'on'
      - platform: homeassistant
        event: start

    condition:
      condition: state
      entity_id: group.shelly
      state: 'on'

    action:
      - delay: '00:00:10'
      - service: script.notify_text
        data_template:
          title: "Shelly - Aggiornamento"
          message: >
            Sono disponibili {{pending_update_list | count }} aggiornamenti per i dispositivi Shelly:
            {% for entity_id in pending_update_list %}
                -> {{ state_attr(entity_id, 'friendly_name')|replace(" - Aggiornamento Firmware", "") }}: {{ state_attr(entity_id, 'latest_version') }}
            {%- endfor -%}
          notification_id: "update"
          enable_persistent: true
      - service: input_boolean.turn_on
        entity_id: input_boolean.update_shelly

  ######################################################################
  # Shelly: Force State Update at Startup
  ######################################################################
  - alias: "Shelly - Startup: Aggiornamento stati"

    trigger:
      - event: start
        platform: homeassistant

    action:
      service: script.shelly_force_state_update

######################################################################
# Shelly Package - Operations Shell Command
######################################################################
shell_command:
  shelly_reboot: 'bash /config/shell_scripts/shelly_reboot.sh'
